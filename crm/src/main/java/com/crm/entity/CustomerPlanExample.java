package com.crm.entity;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;

public class CustomerPlanExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table customer_plan
     *
     * @mbg.generated Tue Mar 31 14:04:49 CST 2020
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table customer_plan
     *
     * @mbg.generated Tue Mar 31 14:04:49 CST 2020
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table customer_plan
     *
     * @mbg.generated Tue Mar 31 14:04:49 CST 2020
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table customer_plan
     *
     * @mbg.generated Tue Mar 31 14:04:49 CST 2020
     */
    public CustomerPlanExample() {
        oredCriteria = new ArrayList<>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table customer_plan
     *
     * @mbg.generated Tue Mar 31 14:04:49 CST 2020
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table customer_plan
     *
     * @mbg.generated Tue Mar 31 14:04:49 CST 2020
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table customer_plan
     *
     * @mbg.generated Tue Mar 31 14:04:49 CST 2020
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table customer_plan
     *
     * @mbg.generated Tue Mar 31 14:04:49 CST 2020
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table customer_plan
     *
     * @mbg.generated Tue Mar 31 14:04:49 CST 2020
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table customer_plan
     *
     * @mbg.generated Tue Mar 31 14:04:49 CST 2020
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table customer_plan
     *
     * @mbg.generated Tue Mar 31 14:04:49 CST 2020
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table customer_plan
     *
     * @mbg.generated Tue Mar 31 14:04:49 CST 2020
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table customer_plan
     *
     * @mbg.generated Tue Mar 31 14:04:49 CST 2020
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table customer_plan
     *
     * @mbg.generated Tue Mar 31 14:04:49 CST 2020
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table customer_plan
     *
     * @mbg.generated Tue Mar 31 14:04:49 CST 2020
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andCpIdIsNull() {
            addCriterion("cp_id is null");
            return (Criteria) this;
        }

        public Criteria andCpIdIsNotNull() {
            addCriterion("cp_id is not null");
            return (Criteria) this;
        }

        public Criteria andCpIdEqualTo(Integer value) {
            addCriterion("cp_id =", value, "cpId");
            return (Criteria) this;
        }

        public Criteria andCpIdNotEqualTo(Integer value) {
            addCriterion("cp_id <>", value, "cpId");
            return (Criteria) this;
        }

        public Criteria andCpIdGreaterThan(Integer value) {
            addCriterion("cp_id >", value, "cpId");
            return (Criteria) this;
        }

        public Criteria andCpIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("cp_id >=", value, "cpId");
            return (Criteria) this;
        }

        public Criteria andCpIdLessThan(Integer value) {
            addCriterion("cp_id <", value, "cpId");
            return (Criteria) this;
        }

        public Criteria andCpIdLessThanOrEqualTo(Integer value) {
            addCriterion("cp_id <=", value, "cpId");
            return (Criteria) this;
        }

        public Criteria andCpIdIn(List<Integer> values) {
            addCriterion("cp_id in", values, "cpId");
            return (Criteria) this;
        }

        public Criteria andCpIdNotIn(List<Integer> values) {
            addCriterion("cp_id not in", values, "cpId");
            return (Criteria) this;
        }

        public Criteria andCpIdBetween(Integer value1, Integer value2) {
            addCriterion("cp_id between", value1, value2, "cpId");
            return (Criteria) this;
        }

        public Criteria andCpIdNotBetween(Integer value1, Integer value2) {
            addCriterion("cp_id not between", value1, value2, "cpId");
            return (Criteria) this;
        }

        public Criteria andCpDateIsNull() {
            addCriterion("cp_date is null");
            return (Criteria) this;
        }

        public Criteria andCpDateIsNotNull() {
            addCriterion("cp_date is not null");
            return (Criteria) this;
        }

        public Criteria andCpDateEqualTo(Date value) {
            addCriterion("cp_date =", value, "cpDate");
            return (Criteria) this;
        }

        public Criteria andCpDateNotEqualTo(Date value) {
            addCriterion("cp_date <>", value, "cpDate");
            return (Criteria) this;
        }

        public Criteria andCpDateGreaterThan(Date value) {
            addCriterion("cp_date >", value, "cpDate");
            return (Criteria) this;
        }

        public Criteria andCpDateGreaterThanOrEqualTo(Date value) {
            addCriterion("cp_date >=", value, "cpDate");
            return (Criteria) this;
        }

        public Criteria andCpDateLessThan(Date value) {
            addCriterion("cp_date <", value, "cpDate");
            return (Criteria) this;
        }

        public Criteria andCpDateLessThanOrEqualTo(Date value) {
            addCriterion("cp_date <=", value, "cpDate");
            return (Criteria) this;
        }

        public Criteria andCpDateIn(List<Date> values) {
            addCriterion("cp_date in", values, "cpDate");
            return (Criteria) this;
        }

        public Criteria andCpDateNotIn(List<Date> values) {
            addCriterion("cp_date not in", values, "cpDate");
            return (Criteria) this;
        }

        public Criteria andCpDateBetween(Date value1, Date value2) {
            addCriterion("cp_date between", value1, value2, "cpDate");
            return (Criteria) this;
        }

        public Criteria andCpDateNotBetween(Date value1, Date value2) {
            addCriterion("cp_date not between", value1, value2, "cpDate");
            return (Criteria) this;
        }

        public Criteria andCpContentIsNull() {
            addCriterion("cp_content is null");
            return (Criteria) this;
        }

        public Criteria andCpContentIsNotNull() {
            addCriterion("cp_content is not null");
            return (Criteria) this;
        }

        public Criteria andCpContentEqualTo(String value) {
            addCriterion("cp_content =", value, "cpContent");
            return (Criteria) this;
        }

        public Criteria andCpContentNotEqualTo(String value) {
            addCriterion("cp_content <>", value, "cpContent");
            return (Criteria) this;
        }

        public Criteria andCpContentGreaterThan(String value) {
            addCriterion("cp_content >", value, "cpContent");
            return (Criteria) this;
        }

        public Criteria andCpContentGreaterThanOrEqualTo(String value) {
            addCriterion("cp_content >=", value, "cpContent");
            return (Criteria) this;
        }

        public Criteria andCpContentLessThan(String value) {
            addCriterion("cp_content <", value, "cpContent");
            return (Criteria) this;
        }

        public Criteria andCpContentLessThanOrEqualTo(String value) {
            addCriterion("cp_content <=", value, "cpContent");
            return (Criteria) this;
        }

        public Criteria andCpContentLike(String value) {
            addCriterion("cp_content like", value, "cpContent");
            return (Criteria) this;
        }

        public Criteria andCpContentNotLike(String value) {
            addCriterion("cp_content not like", value, "cpContent");
            return (Criteria) this;
        }

        public Criteria andCpContentIn(List<String> values) {
            addCriterion("cp_content in", values, "cpContent");
            return (Criteria) this;
        }

        public Criteria andCpContentNotIn(List<String> values) {
            addCriterion("cp_content not in", values, "cpContent");
            return (Criteria) this;
        }

        public Criteria andCpContentBetween(String value1, String value2) {
            addCriterion("cp_content between", value1, value2, "cpContent");
            return (Criteria) this;
        }

        public Criteria andCpContentNotBetween(String value1, String value2) {
            addCriterion("cp_content not between", value1, value2, "cpContent");
            return (Criteria) this;
        }

        public Criteria andCpPlancaseIsNull() {
            addCriterion("cp_plancase is null");
            return (Criteria) this;
        }

        public Criteria andCpPlancaseIsNotNull() {
            addCriterion("cp_plancase is not null");
            return (Criteria) this;
        }

        public Criteria andCpPlancaseEqualTo(String value) {
            addCriterion("cp_plancase =", value, "cpPlancase");
            return (Criteria) this;
        }

        public Criteria andCpPlancaseNotEqualTo(String value) {
            addCriterion("cp_plancase <>", value, "cpPlancase");
            return (Criteria) this;
        }

        public Criteria andCpPlancaseGreaterThan(String value) {
            addCriterion("cp_plancase >", value, "cpPlancase");
            return (Criteria) this;
        }

        public Criteria andCpPlancaseGreaterThanOrEqualTo(String value) {
            addCriterion("cp_plancase >=", value, "cpPlancase");
            return (Criteria) this;
        }

        public Criteria andCpPlancaseLessThan(String value) {
            addCriterion("cp_plancase <", value, "cpPlancase");
            return (Criteria) this;
        }

        public Criteria andCpPlancaseLessThanOrEqualTo(String value) {
            addCriterion("cp_plancase <=", value, "cpPlancase");
            return (Criteria) this;
        }

        public Criteria andCpPlancaseLike(String value) {
            addCriterion("cp_plancase like", value, "cpPlancase");
            return (Criteria) this;
        }

        public Criteria andCpPlancaseNotLike(String value) {
            addCriterion("cp_plancase not like", value, "cpPlancase");
            return (Criteria) this;
        }

        public Criteria andCpPlancaseIn(List<String> values) {
            addCriterion("cp_plancase in", values, "cpPlancase");
            return (Criteria) this;
        }

        public Criteria andCpPlancaseNotIn(List<String> values) {
            addCriterion("cp_plancase not in", values, "cpPlancase");
            return (Criteria) this;
        }

        public Criteria andCpPlancaseBetween(String value1, String value2) {
            addCriterion("cp_plancase between", value1, value2, "cpPlancase");
            return (Criteria) this;
        }

        public Criteria andCpPlancaseNotBetween(String value1, String value2) {
            addCriterion("cp_plancase not between", value1, value2, "cpPlancase");
            return (Criteria) this;
        }

        public Criteria andCpPlandateIsNull() {
            addCriterion("cp_plandate is null");
            return (Criteria) this;
        }

        public Criteria andCpPlandateIsNotNull() {
            addCriterion("cp_plandate is not null");
            return (Criteria) this;
        }

        public Criteria andCpPlandateEqualTo(Date value) {
            addCriterion("cp_plandate =", value, "cpPlandate");
            return (Criteria) this;
        }

        public Criteria andCpPlandateNotEqualTo(Date value) {
            addCriterion("cp_plandate <>", value, "cpPlandate");
            return (Criteria) this;
        }

        public Criteria andCpPlandateGreaterThan(Date value) {
            addCriterion("cp_plandate >", value, "cpPlandate");
            return (Criteria) this;
        }

        public Criteria andCpPlandateGreaterThanOrEqualTo(Date value) {
            addCriterion("cp_plandate >=", value, "cpPlandate");
            return (Criteria) this;
        }

        public Criteria andCpPlandateLessThan(Date value) {
            addCriterion("cp_plandate <", value, "cpPlandate");
            return (Criteria) this;
        }

        public Criteria andCpPlandateLessThanOrEqualTo(Date value) {
            addCriterion("cp_plandate <=", value, "cpPlandate");
            return (Criteria) this;
        }

        public Criteria andCpPlandateIn(List<Date> values) {
            addCriterion("cp_plandate in", values, "cpPlandate");
            return (Criteria) this;
        }

        public Criteria andCpPlandateNotIn(List<Date> values) {
            addCriterion("cp_plandate not in", values, "cpPlandate");
            return (Criteria) this;
        }

        public Criteria andCpPlandateBetween(Date value1, Date value2) {
            addCriterion("cp_plandate between", value1, value2, "cpPlandate");
            return (Criteria) this;
        }

        public Criteria andCpPlandateNotBetween(Date value1, Date value2) {
            addCriterion("cp_plandate not between", value1, value2, "cpPlandate");
            return (Criteria) this;
        }

        public Criteria andScIdIsNull() {
            addCriterion("sc_id is null");
            return (Criteria) this;
        }

        public Criteria andScIdIsNotNull() {
            addCriterion("sc_id is not null");
            return (Criteria) this;
        }

        public Criteria andScIdEqualTo(Integer value) {
            addCriterion("sc_id =", value, "scId");
            return (Criteria) this;
        }

        public Criteria andScIdNotEqualTo(Integer value) {
            addCriterion("sc_id <>", value, "scId");
            return (Criteria) this;
        }

        public Criteria andScIdGreaterThan(Integer value) {
            addCriterion("sc_id >", value, "scId");
            return (Criteria) this;
        }

        public Criteria andScIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("sc_id >=", value, "scId");
            return (Criteria) this;
        }

        public Criteria andScIdLessThan(Integer value) {
            addCriterion("sc_id <", value, "scId");
            return (Criteria) this;
        }

        public Criteria andScIdLessThanOrEqualTo(Integer value) {
            addCriterion("sc_id <=", value, "scId");
            return (Criteria) this;
        }

        public Criteria andScIdIn(List<Integer> values) {
            addCriterion("sc_id in", values, "scId");
            return (Criteria) this;
        }

        public Criteria andScIdNotIn(List<Integer> values) {
            addCriterion("sc_id not in", values, "scId");
            return (Criteria) this;
        }

        public Criteria andScIdBetween(Integer value1, Integer value2) {
            addCriterion("sc_id between", value1, value2, "scId");
            return (Criteria) this;
        }

        public Criteria andScIdNotBetween(Integer value1, Integer value2) {
            addCriterion("sc_id not between", value1, value2, "scId");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table customer_plan
     *
     * @mbg.generated do_not_delete_during_merge Tue Mar 31 14:04:49 CST 2020
     */
    public static class Criteria extends GeneratedCriteria {
        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table customer_plan
     *
     * @mbg.generated Tue Mar 31 14:04:49 CST 2020
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}